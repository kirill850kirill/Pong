from pygame import *
from random import randint

mixer.init()
mixer.music.load('space.ogg')
mixer.music.set_volume(0.5)
mixer.music.play()
fire_sound = mixer.Sound("fire.ogg")
fire_sound.set_volume(0.5)

font.init()
font1 = font.Font(None, 36)

win = font1.render('You WIN', True, (0, 255, 0))
lose = font1.render('You LOSE', True, (255, 0, 0))

img_back = "galaxy.jpg"
img_hero = "rocket.png"
img_enemy = "ufo.png"
img_bullet = "bullet.png"

score = 0
lost = 0
max_lost = 5
goal = 10


class MoveSystem():
    def __init__(self, leftConst, rightConst, action):
        self.left = leftConst
        self.right = rightConst
        self.action = action


class GameSprite(sprite.Sprite):
    def __init__(self, player_image, player_x, player_y, player_speed, controller):
        sprite.Sprite.__init__(self)

        self.image = transform.scale(image.load(player_image), (50, 50))
        self.speed = player_speed
        self.controller = controller

        self.rect = self.image.get_rect()
        self.rect.x = player_x
        self.rect.y = player_y

    def reset(self):
        window.blit(self.image, (self.rect.x, self.rect.y))


class Player(GameSprite):
    def update(self):
        keys = key.get_pressed()
        if keys[self.controller.left] and self.rect.x > 5:
            self.rect.x -= 10
        if keys[self.controller.right] and self.rect.x < 640:
            self.rect.x += 10
        if keys[self.controller.action]:
            self.fire()

    def fire(self):
        # pass
        bullet = Bullet(img_bullet, self.rect.centerx - 25, self.rect.top, 10, self.controller)
        bullet.Resize(self.rect.centerx - 5, self.rect.top)
        bullets.add(bullet)
        fire_sound.play()


class Enemy(GameSprite):
    def update(self):
        self.rect.y += self.speed
        global lost
        if self.rect.y > win_height:
            self.rect.x = randint(0, win_width - 40)
            self.rect.y = 0
            lost = lost + 1


class Bullet(GameSprite):
    def Resize(self, x, y):
        self.image = transform.scale(image.load(img_bullet), (10, 10))
        self.rect = self.image.get_rect()
        self.rect.x = x
        self.rect.y = y

    def update(self):
        self.rect.y -= self.speed
        if self.rect.y < 0:
            self.kill()


win_width = 700
win_height = 500
display.set_caption("Shooter")
window = display.set_mode((win_width, win_height))
clock = time.Clock()
FPS = 60
background = transform.scale(image.load(img_back), (win_width, win_height))
mover1 = MoveSystem(K_LEFT, K_RIGHT, K_SPACE)
ship = Player(img_hero, 300, win_height - 100, 1, mover1)

monsters = sprite.Group()
bullets = sprite.Group()

for i in range(1, 10):
    monster = Enemy(img_enemy, randint(0, win_width - 40), randint(0, 50), randint(1, 2), mover1)
    monsters.add(monster)

finish = False
run = True
while run:
    for e in event.get():
        if e.type == QUIT:
            run = False
    window.blit(background, (0, 0))

    if not finish:
        if score >= goal:
            finish = True
            window.blit(win,(200, 200))

        ship.update()
        ship.reset()
        monsters.update()
        bullets.update()
        monsters.draw(window)
        bullets.draw(window)
        text = font1.render("Счёт: " + str(score), 1, (255, 255, 255))
        window.blit(text, (10, 20))
        text_lose = font1.render("Упущено врагов: " + str(lost), 1, (255, 255, 255))
        window.blit(text_lose, (10, 50))

        collide = sprite.groupcollide(monsters, bullets, True, True)
        for i in collide:
            score = score + 1
            monster = Enemy(img_enemy, randint(0, win_width - 40), randint(0, 50), randint(1, 2), mover1)
            monsters.add(monster)

        if sprite.spritecollide(ship, monsters, False) or lost >= max_lost:
            window.blit(lose, (200, 200))

        display.update()
        clock.tick(FPS)